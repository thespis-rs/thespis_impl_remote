package:

  # When releasing to crates.io:
  #
  # - Update CHANGELOG.md.
  # - Update version numbers in Cargo.yml, Cargo.toml, install section of readme.
  # - verify CI result
  # - test dependent crates
  # - cargo publish
  # - merge dev branch into master
  # - create git tag
  #
  version       : 0.1.0
  name          : thespis_remote_impl
  edition       : '2018'
  authors       : [ Naja Melan <najamelan@autistici.org> ]
  description   : Reference implementation for thespis remote actors
  license       : Unlicense
  homepage      : https://github.com/thespis-rs/thespis_remote_impl
  repository    : https://github.com/thespis-rs/thespis_remote_impl
  documentation : https://docs.rs/thespis_remote_impl
  readme        : README.md
  keywords      : [ async, futures, actor, thespis ]
  categories    : [ Asynchronous, Concurrency, network-programming ]

  metadata:
    docs:
      rs:
        all-features: true

badges:

  maintenance : { status     : actively-developed             }
  travis-ci   : { repository : thespis-rs/thespis_remote_impl }

features:

  default: []

  # Enable creating a peer directly from a type that implements AsyncRead+AsyncWrite
  # from the futures library, and enables the codec to frame such connection.
  #
  futures_codec: [ futures_codec_crate, futures_cbor_codec ]

  # Enable creating a peer directly from a type that implements AsyncRead+AsyncWrite
  # from the futures library, and enables the codec to frame such connection.
  #
  tokio_codec  : [ tokio, tokio-serde-cbor ]

  # only used internally, don't use
  #
  external_doc: []

lib:

  bench: false


dependencies:

  # public dependencies (bump major if you change their version number here)
  #
  # One major consideration is the ServiceID hash it must be stable.
  # Codec related stuff is another, since we make public our codec impl.
  # Pharos events are public on peer
  # thiserror shouldn't have any public impact, but if they make a breaking change, take care to double check.
  #
  twox-hash           : { version: ^1                                                       }
  serde               : { version: ^1  , default-features: false, features: [ derive ]      }
  serde_bytes         : ^0.11
  serde_cbor          : { version: ^0.10                                                    }
  bytes               : { version: ^0.5                                                     }
  futures             : { version: ^0.3, features: [ std, compat ], default-features: false }
  futures_codec_crate : { version: ^0.3, optional: true, package: futures_codec             }
  futures_cbor_codec  : { version: ^0.2, optional: true                                     }
  pharos              : { version: ^0.4, path: ../../pharos                                 }
  thiserror           : ^1
  thespis             : { path: ../thespis                                                  }


  # private deps. TODO: verify for thespis_impl before release.
  #
  thespis_impl        : { path: ../thespis_impl   }
  log                 : ^0.4
  regex               : { version: ^1, features: [ pattern ] }
  once_cell           : ^1

  # tokio stuff
  #
  tokio:

    version          : ^0.2
    features         : [ io-util ]
    default-features : false
    optional         : true

  tokio-serde-cbor   : { version: ^0.3, optional: true }


  # remote stuff
  #
  byteorder         : { version: ^1                                                   }
  rand              : { version: ^0.7, default-features: false                        }

dev-dependencies:

  assert_matches    : ^1
  pretty_assertions : ^0.6
  flexi_logger      : ^0.14

  async_executors   : { path: ../../async_executors, features: [ localpool, threadpool, async_std ] }
  futures_ringbuf   : ^0.1


profile:

  release:

    opt-level    : 3
    codegen-units: 1

    lto          : false
    debug        : true


patch:

  crates-io:

    futures: { version: ^0.3, path: ../../RUST/futures-rs/futures }
